{"version":3,"sources":["PokeLoop/PokeLoop.js","PokeCaughtLoop/PokeCaughtLoop.js","App.js","serviceWorker.js","index.js"],"names":["PokeLoop","_this","this","pokeLoop","props","pokemon","map","e","i","react_default","a","createElement","className","key","name","slice","toUpperCase","id","src","sprites","front_default","alt","onClick","handleCatch","Component","PokeCaughtLoop","pokeCaughtLoop","caughtPokemon","handleRelease","caughtId","App","state","showCaughtPokemon","textBox","filterCaughtPokemon","filterPokemon","handleChange","event","setState","Object","defineProperty","target","value","handleFilter","filter","includes","swal","fire","title","concat","charAt","text","type","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","axios","delete","response","data","body","post","showConfirmButton","console","log","handleToggle","_this2","get","placeholder","onChange","src_PokeCaughtLoop_PokeCaughtLoop","src_PokeLoop_PokeLoop","controls","loop","autoPlay","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2238c180.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport './PokeLoop.css'\n\nclass PokeLoop extends Component {\n    render() {\n        const pokeLoop = this.props.pokemon.map((e, i) => {\n            return <div className='pokeCards' key={i}>\n                <div className='name'>\n                    {e.name.slice(0, 1).toUpperCase()}{e.name.slice(1)}\n                    <br />\n                    ID: {e.id}\n                </div>\n                <div className='boxInCard'>\n                    <img src={e.sprites.front_default} alt='pokemon sprite' />\n                </div>\n                <div className='catchButton' onClick={() => { this.props.handleCatch(e.id, e.name) }}></div>\n            </div>\n        })\n        return (\n            <div className='pokeLoop'>\n                {pokeLoop}\n            </div>\n        )\n    }\n}\n\nexport default PokeLoop","import React, { Component } from 'react'\nimport './PokeCaughtLoop.css'\n\nclass PokeCaughtLoop extends Component {\n\n\n    render() {\n\n        const pokeCaughtLoop = this.props.caughtPokemon.map((e, i) => {\n            return <div className='pokeCards' key={i}>\n                <div className='name'>\n                    {e.name.slice(0, 1).toUpperCase()}{e.name.slice(1)}\n                    <br />\n                    ID: {e.id}\n                </div>\n                <div className='boxInCard'>\n                    <img src={e.sprites.front_default} alt='pokemon sprite' />\n              </div>\n        <button onClick={() => { this.props.handleRelease(e.caughtId, e.name) }}>Release</button>\n            </div>\n        })\n\n        return (\n            <div className='pokeCaughtLoop'>\n                {pokeCaughtLoop}\n            </div>\n        )\n    }\n}\n\nexport default PokeCaughtLoop","import React, { Component } from 'react'\nimport './App.css'\nimport axios from 'axios'\nimport PokeLoop from './PokeLoop/PokeLoop'\nimport PokeCaughtLoop from './PokeCaughtLoop/PokeCaughtLoop'\nimport swal from 'sweetalert2';\n\n\nexport default class App extends Component {\n  state = {\n    pokemon: [],\n    caughtPokemon: [],\n    showCaughtPokemon: false,\n    textBox: '',\n    filterCaughtPokemon: [],\n    filterPokemon: [],\n  }\n  componentDidMount() {\n    axios.get('/api/pokemon')\n      .then((response) => {\n        this.setState({\n          pokemon: response.data.pokemon,\n          caughtPokemon: response.data.caughtPokemon,\n          filterPokemon: response.data.pokemon,\n          filterCaughtPokemon: response.data.caughtPokemon,\n        })\n        console.log(response.data.pokemon)\n      })\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    }, this.handleFilter)\n  }\n\n  handleFilter = () => {\n    const filterCaughtPokemon = this.state.caughtPokemon.filter((e, i) => {\n      return e.name.includes(this.state.textBox)\n    })\n    const filterPokemon = this.state.pokemon.filter((e, i) => {\n      return e.name.includes(this.state.textBox)\n    })\n    this.setState({\n      filterCaughtPokemon,\n      filterPokemon\n    })\n  }\n\n  handleRelease = (id, name) => {\n    swal.fire({\n      title: `Do you really want to say goodbye to ${name.charAt(0).toUpperCase()}${name.slice(1)} forever?`,\n      text: 'You cannot revert this!!!',\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#f52e12',\n      cancelButtonColor: '#2562a0',\n      confirmButtonText: 'Yes, release it!'\n    })\n      .then((result) => {\n        if (result.value) {\n          return axios.delete(`/api/pokemon/?id=${id}`)\n        }\n      })\n      .then((response) => {\n        this.setState({\n          caughtPokemon: response.data,\n          filterCaughtPokemon: response.data\n        })\n        swal.fire(`You'll never see ${name.charAt(0).toUpperCase()}${name.slice(1)} again...`)\n      })\n  }\n\n  handleCatch = (id, name) => {\n    let body = {\n      id\n    }\n    axios.post('/api/pokemon', body)\n      .then((response) => {\n        this.setState({\n          caughtPokemon: response.data,\n          filterCaughtPokemon: response.data\n        })\n        swal.fire({\n          title: `You caught ${name.charAt(0).toUpperCase()}${name.slice(1)}!`,\n          text: `${name.charAt(0).toUpperCase()}${name.slice(1)} was sent to PC`,\n          type: 'success',\n          showConfirmButton: false\n        })\n      })\n    console.log(`You caught ${name.charAt(0).toUpperCase()}${name.slice(1)}`)\n  }\n  handleToggle = () => {\n    this.setState({\n      showCaughtPokemon: !this.state.showCaughtPokemon,\n    })\n  }\n\n  render() {\n    return (\n      <div className='App'>\n        <div className='header'>\n          <div className='togbtn'>\n            <button className='buttonToggle' onClick={this.handleToggle}>Toggle</button>\n          </div>\n          <div>\n            <img className='pkimg' src=\"https://bit.ly/2SllOXz\" alt=\"Pokemon\" />\n          </div>\n          <div className='inpt'>\n            <input type=\"text\" placeholder='Search' name='textBox' value={this.state.textBox} onChange={this.handleChange} />\n          </div> \n        </div>\n        <div className='list'>\n          <div className='pokeList'>\n            {this.state.showCaughtPokemon ? <PokeCaughtLoop handleRelease={this.handleRelease} caughtPokemon={this.state.filterCaughtPokemon} /> : <PokeLoop handleCatch={this.handleCatch} pokemon={this.state.filterPokemon} />}\n          </div>\n        </div>\n        <div>\n          <audio src='http://www.pokezorworld.com/anime/wav/themesong.wav'controls loop autoPlay/>\n        </div>\n      </div>\n    )\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}